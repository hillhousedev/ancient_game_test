(()=>{var e={888:(e,t,n)=>{"use strict";var r=new(n(121))(n(83));r.authenticate().then((function(){console.log("Successfully connected to db")})).catch((function(e){console.error(" Error cant connect to db..",e)})),e.exports=r},83:e=>{"use strict";e.exports={username:"postgres",password:"root",database:"relay_dev",host:"127.0.0.1",dialect:"postgres"}},479:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={serverPort:process.env.SERVER_PORT||3e3,redisHost:process.env.REDIS_HOST||"localhost",redisPort:process.env.REDIS_PORT||6379};t.default=n},519:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=n(232),i=r(n(981)),o=r(n(820));new s.ApolloServer({resolvers:i.default,typeDefs:o.default}).listen().then((function(e){var t=e.url;return console.log("Server ready at "+t+". ")}))},981:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,i){function o(e){try{u(r.next(e))}catch(e){i(e)}}function a(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,a)}u((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){o.label=i[1];break}if(6===i[0]&&o.label<s[1]){o.label=s[1],s=i;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(i);break}s[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};Object.defineProperty(t,"__esModule",{value:!0});var i=n(189),o=n(189),a=n(334),u=(n(795),n(479)),l=n(621).RedisPubSub,d=(n(470),n(933),new l({connection:{host:u.redisHost,port:u.redisPort,retry_strategy:function(e){return Math.max(100*e.attempt,3e3)}}})),c=1,g=[],S="messageAdded";d.subscribe(S,(function(e){console.log("New message received on channel $(CHANNEL)");try{var t=e[S];g.push(t),console.log("Added message to database")}catch(e){console.error("Error trying to extract new message from payload"),console.error(e.message)}}));var p=[{id:"1",content:"This is a note",author:"Adam Scott"},{id:"2",content:"This is another note",author:"Harlow Everly"},{id:"3",content:"Hey look at another note!",author:"Riley Harrison"}],f=[{id:"1",name:"Chisco",score:50,location:"New york"},{id:"2",name:"Deji",score:80,location:"France"},{id:"3",name:"Dele",score:70,location:"Canada"},{id:"4",name:"Chioma",score:640,location:"Imo"}];t.default={Query:{testMessage:function(){return"Hello World!"},notes:function(){return p},players:function(){return f},users:function(){return i.findAll()},user:function(e,t){var n=t.id;return i.findOne({where:{id:n}})},posts:function(){return o.findAll()},post:function(e,t){var n=t.id;return o.findOne({where:{id:n}})},getStudent:function(e,t){var n=t.id;return a.findOne({where:{id:n}})},getAllStudents:function(e){return a.findAll()},getHobbies:function(e,t,n){var i=t.id,o=n.models;return r(this,void 0,void 0,(function(){return s(this,(function(e){return[2,o.Hobbies.findByPk(i)]}))}))},messages:function(e,t,n){return g}},Mutation:{createUser:function(e,t){var n=t.name,r=t.email;return i.create({name:n,email:r})},updateUser:function(e,t){var n=t.name,r=t.email,s=t.id;return i.update({name:n,email:r},{where:{id:s}})},deleteUser:function(e,t){var n=t.id;return i.destroy({where:{id:n}})},createPost:function(e,t){var n=t.title,r=t.content,s=t.usersEmail,i=t.usersName;return o.create({title:n,content:r,usersEmail:s,usersName:i})},updatePost:function(e,t){var n=t.title,r=t.content,s=t.id;return o.update({title:n,content:r},{where:{id:s}})},deletePost:function(e,t){var n=t.id;return o.destroy({where:{id:n}})},addMessage:function(e,t){var n=t.message;console.log({message:n});var r={id:String(c++),content:n};return d.publish(S,{messageAdded:r}),g},createStudent:function(e,t){var n=t.firstName,r=t.email;return a.create({firstName:n,email:r})},createHobbies:function(e,t,n){var i=t.studentId,o=t.title,a=n.models;return r(this,void 0,void 0,(function(){return s(this,(function(e){return[2,a.Hobbies.create({studentId:i,title:o})]}))}))}},Subscription:{messageAdded:{subscribe:function(){return d.asyncIterator(S)}}}}},820:function(e,t,n){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e};Object.defineProperty(t,"__esModule",{value:!0});var s,i=n(232);t.default=i.gql(s||(s=r(['\n\n  type Message {\n      id: String \n      content: String\n  }\n\n  type Student {\n      id: Int!\n      firstName: String!\n      email: String!\n      hobbies: [Hobbies!]!\n  }\n\n  type Hobbies {\n      id: Int!\n      title: String!\n      student: Student!\n  }\n\n\n\n\n\n  type Note {\n      id: ID!\n      content: String!\n      author: String!\n  }\n\n  type User {\n      id: ID\n      name: String \n      email: String \n  }\n  type Post {\n      id: ID\n      title: String\n      content: String\n      usersEmail: String\n      usersName: String\n  }\n\n  type Player {\n      id: ID!\n      name: String!\n      score: Int!\n      location: String!\n  }\n\n  type Query {\n    """\n    Test Message. \n    """\n    testMessage: String!\n    notes: [Note!]!\n    players: [Player!]!\n    users: [User]\n    user(id: ID): User\n    posts: [Post]\n    post(id: ID): Post\n    messages: [Message!]!\n    getStudent(id: Int!): Student\n    getAllStudents: [Student!]!\n    getHobbies(id: Int!): Hobbies\n    getAllHobbies: [Hobbies!]!\n\n  }\n\n  type Mutation {\n      createUser(name: String, email: String): User\n      updateUser(name: String, email: String, id: ID): User\n      deleteUser(id: ID): User\n      createPost(title: String, content: String, usersEmail: String, usersName: String): Post\n      updatePost(title: String, content: String, id: ID ): Post\n      deletePost(id: ID): Post\n      addMessage(message: String!): [String]!\n\n      createStudent(firstName: String!, email: String!): Student\n      createHobbies( studentId: Int!, title: String!): Hobbies\n  }\n  \n  type Subscription {\n      messageAdded: Message\n  }\n\n\n'],['\n\n  type Message {\n      id: String \n      content: String\n  }\n\n  type Student {\n      id: Int!\n      firstName: String!\n      email: String!\n      hobbies: [Hobbies!]!\n  }\n\n  type Hobbies {\n      id: Int!\n      title: String!\n      student: Student!\n  }\n\n\n\n\n\n  type Note {\n      id: ID!\n      content: String!\n      author: String!\n  }\n\n  type User {\n      id: ID\n      name: String \n      email: String \n  }\n  type Post {\n      id: ID\n      title: String\n      content: String\n      usersEmail: String\n      usersName: String\n  }\n\n  type Player {\n      id: ID!\n      name: String!\n      score: Int!\n      location: String!\n  }\n\n  type Query {\n    """\n    Test Message. \n    """\n    testMessage: String!\n    notes: [Note!]!\n    players: [Player!]!\n    users: [User]\n    user(id: ID): User\n    posts: [Post]\n    post(id: ID): Post\n    messages: [Message!]!\n    getStudent(id: Int!): Student\n    getAllStudents: [Student!]!\n    getHobbies(id: Int!): Hobbies\n    getAllHobbies: [Hobbies!]!\n\n  }\n\n  type Mutation {\n      createUser(name: String, email: String): User\n      updateUser(name: String, email: String, id: ID): User\n      deleteUser(id: ID): User\n      createPost(title: String, content: String, usersEmail: String, usersName: String): Post\n      updatePost(title: String, content: String, id: ID ): Post\n      deletePost(id: ID): Post\n      addMessage(message: String!): [String]!\n\n      createStudent(firstName: String!, email: String!): Student\n      createHobbies( studentId: Int!, title: String!): Hobbies\n  }\n  \n  type Subscription {\n      messageAdded: Message\n  }\n\n\n'])))},795:(e,t,n)=>{"use strict";const{Model:r}=n(121);e.exports=(e,t)=>{class n extends r{static associate(e){n.associate=function(e){n.belongsTo(e.Students,{foreignKey:"studentId"})}}}return n.init({title:t.STRING},{sequelize:e,modelName:"Hobbies"}),n}},334:(e,t,n)=>{"use strict";const r=n(121),s=n(888).define("Students",{firstName:{allowNull:!1,type:r.STRING},email:{allowNull:!1,type:r.STRING,unique:!0}});e.exports=s},189:(e,t,n)=>{const r=n(121),s=n(888),i=s.define("Users",{name:{allowNull:!1,type:r.STRING},email:{allowNull:!1,type:r.STRING,unique:!0}}),o=s.define("Posts",{title:{type:r.STRING,allowNull:!1},content:{type:r.STRING,allowNull:!1}});i.hasMany(o),o.belongsTo(i),e.exports=i},232:e=>{"use strict";e.exports=require("apollo-server")},621:e=>{"use strict";e.exports=require("graphql-redis-subscriptions")},933:e=>{"use strict";e.exports=require("ioredis")},470:e=>{"use strict";e.exports=require("moment")},121:e=>{"use strict";e.exports=require("sequelize")}},t={};!function n(r){if(t[r])return t[r].exports;var s=t[r]={exports:{}};return e[r].call(s.exports,s,s.exports,n),s.exports}(519)})();
//# sourceMappingURL=server.js.map